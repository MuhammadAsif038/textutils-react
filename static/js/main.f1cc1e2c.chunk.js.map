{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","backgroundColor","rows","value","onChange","event","target","showAlert","handleUpClick","newText","toUpperCase","handleLoClick","toLowerCase","handleClrClick","handleCopyClick","console","log","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaceClick","split","join","handleFontSizeClick","fontSize","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f1cc1e2c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom/cjs/react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    // <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li> */}\r\n       \r\n      </ul>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success me-2\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n                    title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired\r\n                }\r\nNavbar.defaultProps = {\r\n                    title: 'Set title here',\r\n                    aboutText: 'About text here'\r\n                }","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  // text = 'my new text'; // wrong way to assign text\r\n  // setText('my new text'); // right way to assign text\r\n  const handleUpClick = () => {\r\n    // console.log(\"Upper case was clicked\");\r\n    // setText(\"You have clicked on handleUpClick\");\r\n    let newText =text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to upper case!\", \"success\");\r\n  }\r\n  const handleLoClick = () => {\r\n    let newText =text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to lower case!\", \"success\");\r\n  }\r\n  const handleClrClick = () => {\r\n    let newText ='';\r\n    setText(newText);\r\n    props.showAlert(\"text box cleared!\", \"success\");\r\n  }\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n    props.showAlert(\"text box edited!\", \"success\");\r\n  }\r\n  const handleCopyClick = () => {\r\n    console.log(\"I am copy\");\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text box contents copied on clipboard!\", \"success\");\r\n  }\r\n\r\n  const handleExtraSpaceClick = () => {\r\n    // let newText =text.replace(/\\s+/g, ' ').trim();\r\n    // console.log(newText);\r\n\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n  \r\n    // Both methods are ok\r\n    props.showAlert(\"Extra spaces have been removed!\", \"success\");\r\n\r\n  }\r\n  const handleFontSizeClick = () => {\r\n    let demo_paragraph = document.getElementById( 'myBox' );\r\n    demo_paragraph.style.fontSize = \"150%\" ;\r\n    props.showAlert(\"Font size increased!\", \"success\");\r\n  }\r\n\r\n  const [text, setText] =useState('Enter text here')\r\n  \r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'black'}} >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" id=\"myBox\" style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} rows=\"8\" value={text} onChange={handleOnChange} ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to upper case</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to lower case</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClrClick}>Clear</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>Copy</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaceClick}>Remove Extra Space</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleFontSizeClick}>ٖFont Size</button>\r\n    </div>\r\n    <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n      <h1>Your text summary</h1>\r\n      <p>{text.split(\" \").length} words {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes are required to read this</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  \r\n  const capitalize = (word) =>{\r\n    const lower = word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n}\r\n\r\n  return (\r\n    props.alert && <div>\r\n        {/* <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\"> */}\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)} : </strong> {props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter,\n//   Switch,\n//   Route,\n//   } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');    // whether dark mode in on or not \n  const [alert, setAlert] = useState(null);\n\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      \n      // some extra functionality in title\n\n      // setInterval(() => {\n      //   document.title = \"TextUtils is amazing!!!!\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"TextUtils Install it Now!!!!\"\n      // }, 1500);\n    }\n\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n\n  }\n\nconst showAlert = (message, type) =>{\n  setAlert({\n    msg: message,\n    type: type\n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n}\n\n  return (\n    <>\n    {/* <Navbar/> */}\n    \n    {/* <BrowserRouter> */}\n    <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch>\n        <Route exact path=\"/about\">\n          <About/>\n        </Route>  \n        <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to Analyze below:\" mode={mode}/>\n        {/* </Route>\n      </Switch> */}\n      </div>\n    {/* </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}